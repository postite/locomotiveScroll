// Generated by Haxe 4.1.1
(function ($global) { "use strict";
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	console.log("src/Main.hx:9:","Hello, world!");
	locomotive_LocoTools.assignScroll(window.document.getElementById("two"));
	locomotive_LocoTools.assignScrollCall(window.document.getElementById("two"),"twop");
	locomotive_LocoTools.assignScrollRepeat(window.document.getElementById("two"));
	var loco = new LocomotiveScroll({ el : window.document.querySelector("[data-scroll-container]"), smooth : true});
	loco.on("call",function(func,status) {
		console.log("src/Main.hx:23:",func);
		console.log("src/Main.hx:24:",status);
	});
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var locomotive_LocoTools = function() { };
locomotive_LocoTools.__name__ = true;
locomotive_LocoTools.assignScroll = function(el) {
	el.dataset.scroll = "";
	return el;
};
locomotive_LocoTools.assignScrollContainer = function(el) {
	el.dataset.scrollContainer = "";
	return el;
};
locomotive_LocoTools.assignScrollSection = function(el) {
	el.dataset.scrollSection = "";
	return el;
};
locomotive_LocoTools.assignScrollClass = function(el,classe) {
	el.dataset.scrollClass = classe;
	return el;
};
locomotive_LocoTools.assignScrollOffset = function(el,offset) {
	el.dataset.scrollOffset = Std.string(offset);
	return el;
};
locomotive_LocoTools.assignScrollRepeat = function(el,repeat) {
	if(repeat == null) {
		repeat = true;
	}
	el.dataset.scrollRepeat = repeat == null ? "null" : "" + repeat;
	return el;
};
locomotive_LocoTools.assignScrollPosition = function(el,pos) {
	el.dataset.scrollPosition = pos;
	return el;
};
locomotive_LocoTools.assignScrollSpeed = function(el,speed) {
	el.dataset.scrollSpeed = speed == null ? "null" : "" + speed;
	return el;
};
locomotive_LocoTools.assignScrollDelay = function(el,delay) {
	el.dataset.scrollDelay = delay == null ? "null" : "" + delay;
	return el;
};
locomotive_LocoTools.assignScrollDirection = function(el,dir) {
	el.dataset.scrollDirection = dir;
	return el;
};
locomotive_LocoTools.assignScrollSticky = function(el,sticky) {
	el.dataset.scrollSticky = sticky == null ? "null" : "" + sticky;
	return el;
};
locomotive_LocoTools.assignScrollTarget = function(el,target) {
	el.dataset.scrollTarget = target == null ? "null" : "" + target;
	return el;
};
locomotive_LocoTools.assignScrollCall = function(el,data) {
	if(data == null) {
		data = true;
	}
	el.dataset.scrollCall = data.toString();
	return el;
};
locomotive_LocoTools.assignScrollId = function(el,data) {
	el.dataset.scrollId = data.toString();
	return el;
};
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
